// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant

@import 'tweaks-temp';
@import 'color-palette';

@function gtkalpha($c, $a) {
  @return unquote("alpha(#{$c}, #{$a})");
}

@function gtkmix($c1,$c2,$r) {
  $ratio: 1 -  $r / 100%; // match SCSS mix()
  @return unquote("mix(#{$c1},#{$c2},#{$ratio})");
}

@function gtkshade($c,$s) {
  @return unquote("shade(#{$c},#{$s})");
}

@function gtkcolor($c) {
  @return unquote("@#{$c}");
}

@function on($color, $state: 'primary') {
  // Allow 'light' or 'dark' to $color
  @if ($color == 'light') { $color: $SNDL-White_Primary; }
  @if ($color == 'dark') { $color: $SNDL-Black_Primary; }

  //@return $color;

  // Calculate color brightness according to https://www.w3.org/TR/AERT/#color-contrast
  $brightness: (red($color) * 299 + green($color) * 587 + blue($color) * 114) / 1000;

  @if ($brightness >= 156) {
    @if ($state == 'primary') { @return rgba($SNDL-Black_Primary, 0.87); }
    @if ($state == 'secondary') { @return rgba($SNDL-Black_Primary, 0.6); }
    @if ($state == 'disabled') { @return rgba($SNDL-Black_Primary, 0.38); }
    @if ($state == 'secondary-disabled') { @return rgba($SNDL-Black_Primary, 0.26); }
    @if ($state == 'track') { @return rgba($SNDL-Black_Primary, 0.26); }
    @if ($state == 'track-disabled') { @return rgba($SNDL-Black_Primary, 0.12); }
    @if ($state == 'divider') { @return rgba($SNDL-Black_Primary, 0.12); }
    @if ($state == 'fill') { @return rgba($SNDL-Black_Primary, 0.04); }
  } @else {
    @if ($state == 'primary') { @return $SNDL-White_Primary; }
    @if ($state == 'secondary') { @return rgba($SNDL-White_Primary, 0.7); }
    @if ($state == 'disabled') { @return rgba($SNDL-White_Primary, 0.5); }
    @if ($state == 'secondary-disabled') { @return rgba($SNDL-White_Primary, 0.3); }
    @if ($state == 'track') { @return rgba($SNDL-White_Primary, 0.3); }
    @if ($state == 'track-disabled') { @return rgba($SNDL-White_Primary, 0.12); }
    @if ($state == 'divider') { @return rgba($SNDL-White_Primary, 0.12); }
    @if ($state == 'fill') { @return rgba($SNDL-White_Primary, 0.04); }
  }
}

@function highlight($color) {
  @if (lightness($color) >= 80%) { @return rgba(white, 0.4); }
  @else if (lightness($color) >= 40%) { @return rgba(white, 0.2); }
  @else { @return rgba(white, 0.1); }
}

@function theme($color) {
  @if ($theme == 'default') { @return $SNDL-Pink_Primary; }
  @if ($theme == 'black') { @return $SNDL-Black_Primary; }
  @if ($theme == 'white') { @return $SNDL-White_Primary; }

  @if ($theme == 'red') { @return $SNDL-Red_Primary; }
  @if ($theme == 'orange') { @return $SNDL-Orange_Primary; }
  @if ($theme == 'yellow') { @return $SNDL-Yellow_Primary; }
  @if ($theme == 'green') { @return $SNDL-Green_Primary; }
  @if ($theme == 'cyan') { @return $SNDL-Cyan_Primary; }
  @if ($theme == 'blue') { @return $SNDL-Blue_Primary; }
  @if ($theme == 'purple') { @return $SNDL-Purple_Primary; }
  @if ($theme == 'pink') { @return $SNDL-Pink_Primary; }
}

@function titlebar($state: 'normal') {
  @if ($variant == 'light' and $topbar == 'light' and $state=='normal' and $blur == 'false') { @return $SNDL-White_Primary; }
  @if ($variant == 'light' and $topbar == 'light' and $state=='backdrop' and $blur == 'false') { @return $SNDL-White_Secondary; }
  @if ($variant == 'light' and $topbar == 'light' and $state=='normal' and $blur == 'true') { @return $SNDL-White_Primary; }
  @if ($variant == 'light' and $topbar == 'light' and $state=='backdrop' and $blur == 'true') { @return $SNDL-White_Secondary; }
  @if ($variant == 'light' and $topbar == 'dark' and $state=='normal') { @return $SNDL-Red_Primary; }
  @if ($variant == 'light' and $topbar == 'dark' and $state=='backdrop') { @return $SNDL-Red_Secondary; }
  @if ($variant == 'dark' and $state=='normal') { @return $SNDL-Red_Primary; }
  @if ($variant == 'dark' and $state=='backdrop') { @return $SNDL-Red_Secondary; }
}

//
// Basic colors
//
$primary:                               rgba(theme(color), $SNDL-UI_Opacity_Hint);
$entry-highlight:                       rgba(theme(color), $SNDL-UI_Opacity_Floating);
$drop_target_color:                     $SNDL-Orange_Primary;

$blur-opacity: $SNDL-UI_Opacity-Hint;

$background:                           if($variant == 'light', rgba($SNDL-White_Primary, $SNDL-UI_Opacity_Solid), rgba($SNDL-Black_Primary, $SNDL-UI_Opacity_Solid));
$surface:                              if($variant == 'light', rgba($SNDL-White_Primary, $SNDL-UI_Opacity_Solid), rgba($SNDL-Black_Primary, $SNDL-UI_Opacity_Solid));
$base:                                 if($variant == 'light', rgba($SNDL-White_Primary, $SNDL-UI_Opacity_Solid), rgba($SNDL-Black_Primary, $SNDL-UI_Opacity_Solid)); // semi-surface with 1dp elevation
$base-alt:                             rgba(0,0,0, 0);

$scrim:                                 rgba(cyan, 0.6);
$scrim-alt:                             rgba(cyan, 0.3);
$scrim-inverse:                         rgba(purple, 0.1);

$menu:                                  $surface;
$tooltip:                               rgba(#363636, 0.9);
$titlebar:                              titlebar(normal);
$titlebar-backdrop:                     titlebar(backdrop);
$titlebar:                              rgba($SNC-Primary, $SNDL-UI_Opacity_Hint);
$titlebar-backdrop:                     $titlebar; // Inactive Color, not sure why it's called backdrop

$panel:                                 if($topbar == 'light', rgba($SNDL-White_Primary, $SNDL-UI_Opacity_Solid), rgba($SNDL-Black_Primary, $SNDL-UI_Opacity_Solid));
$panel-solid:                           if($topbar == 'light', $SNDL-White_Primary, $SNDL-Black_Primary); // for Unity panel which doesn't allow translucent colors

//
// Misc colors
//

$link:                                  $SNC-Link;
$link-visited:                          $SNC-Link_Visited;

$warning:                               $SNDL-Yellow_Primary;
$error:                                 $SNDL-Red_Primary;
$success:                               $SNDL-Green_Primary;

$suggested:                             rgba(theme(color), $SNDL-UI_Opacity_Floating);
$destructive:                           $error;

$frame:                                 rgba($SNDL-Black_Tertiary, $SNDL-UI_Opacity_Hint); // instead of shadows
$border:                                if($variant == 'light', rgba($SNDL-Black_Tertiary, $SNDL-UI_Opacity_Hint), rgba($SNDL-White_Tertiary, $SNDL-UI_Opacity_Hint)); // Buttons and Entries
$solid-border:                          if($variant == 'light', darken($SNDL-Black_Tertiary, 10%), lighten($SNDL-Black_Tertiary, 10%));
$border-alt:                            rgba($SNDL-Black_Tertiary, $SNDL-UI_Opacity_Hint); // darker border color for Chrome and Firefox
$border-bottom:                         if($variant == 'light', rgba($SNDL-Black_Tertiary, $SNDL-UI_Opacity_Hint), rgba($SNDL-White_Tertiary, $SNDL-UI_Opacity_Hint)); // Buttons and Entries
$titlebar-indicator:                    if($topbar == 'dark', currentColor, $primary);

//
// Overlay state colors
//

$overlay-normal:                        gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-hover:                         gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-focus:                         gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-focus-hover:                   gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-active:                        gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-checked:                       gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);
$overlay-selected:                      gtkalpha(currentColor, $SNDL-UI_Opacity_Hint);

//
// Text and derivative colors
//

$text:                                  $SNC-Text;
$text-secondary:                        $SNC-Header;
$text-disabled:                         $SNC-Text_Unavailable;
$text-secondary-disabled:               $SNC-Header_Unavailable;
$track:                                 $SNC-IText;
$track-disabled:                        $SNC-Text_Unavailable;
$divider:                               on(rgba($SNC-Tertiary, 0.5), divider);
$fill:                                  ($background, fill);

$titlebar-text:                         $text;
$titlebar-text-secondary:               $text-secondary;
$titlebar-text-disabled:                $text-disabled;
$titlebar-text-secondary-disabled:      $text-secondary-disabled;
$titlebar-track:                        $track;
$titlebar-track-disabled:               $track-disabled;
$titlebar-divider:                      $divider;
$titlebar-fill:                         $fill;

// workaround for GTK3 @placeholder_text_color which doesn't allow translucent colors
$placeholder_text_color:                mix($SNC-Text, $base, percentage(0.6));
